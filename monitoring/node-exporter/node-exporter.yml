# Configuração do Node Exporter
# Este arquivo contém as configurações para o Node Exporter

# Coletor padrão (coleta todas as métricas básicas)
collector:
  # Coletor de sistema de arquivos
  filesystem:
    ignored-mount-points: "^/(sys|proc|dev|host|etc)($$|/)"
    
  # Coletor de rede
  netdev:
    ignored-devices: "^(lo|docker[0-9]*|veth.*)$$"
    
  # Coletor de disco
  diskstats:
    ignored-devices: "^(ram|loop|fd|(h|s|v|xv|nvme\d+n\d+p)\d+)\d*$$"
    
  # Coletor de sistema de arquivos
  filesystem:
    mount-points-exclude: "^/(sys|proc|dev|host|etc)($$|/)"
    
  # Coletor de memória
  meminfo: {}
  
  # Coletor de CPU
  cpu:
    enabled: true
    
  # Coletor de carga
  loadavg: {}
  
  # Coletor de tempo de atividade
  time: {}
  
  # Coletor de estatísticas de rede
  netstat: {}
  
  # Coletor de estatísticas de disco
  diskstats: {}
  
  # Coletor de estatísticas de sistema de arquivos
  filesystem: {}
  
  # Coletor de estatísticas de memória
  meminfo: {}
  
  # Coletor de estatísticas de CPU
  stat: {}
  
  # Coletor de tempo de sistema
  time: {}
  
  # Coletor de estatísticas de rede
  netdev: {}

# Configuração de log
log:
  level: info
  format: json

# Configuração de web
telemetry:
  path: /metrics
  max-requests: 40
  timeout: 10s

# Configuração de coleta
collector:
  # Desativa coletores específicos, se necessário
  # disabled-collectors: ""
  
  # Intervalo de coleta (padrão: 15s)
  # collector.interval: 15s
  
  # Tempo limite para coleta (padrão: 10s)
  # collector.timeout: 10s

# Configuração de filtro
collector:
  # Filtra métricas específicas
  # metric-whitelist: ".*"
  
  # Filtra métricas específicas
  # metric-blacklist: ""

# Configuração de descoberta de serviço
# discovery:
#   targets:
#     - localhost:9100

# Configuração de etiquetas personalizadas
# labels:
#   instance: "node1"
#   env: "production"
#   role: "database"

# Configuração de autenticação HTTP básica
# basic_auth:
#   username: "user"
#   password: "password"

# Configuração TLS
# tls:
#   cert_file: "/path/to/cert.pem"
#   key_file: "/path/to/key.pem"
#   client_auth_type: "RequestClientCert"
#   client_ca_file: "/path/to/ca.pem"
#   min_version: "TLS12"
#   max_version: "TLS13"
#   prefer_server_cipher_suites: true
#   cipher_suites: "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
#   curve_preferences: "P256,P384"

# Configuração de proxy HTTP
# http:
#   proxy_url: "http://proxy.example.com:8080"
#   proxy_connect_header:
#     Proxy-Authorization: "Basic dXNlcjpwYXNzd29yZA=="

# Configuração de cabeçalhos HTTP personalizados
# http:
#   headers:
#     X-Custom-Header: "value"
#     Authorization: "Bearer token"

# Configuração de tempo limite de conexão
# http:
#   timeout: 10s
#   dial_timeout: 5s
#   tls_handshake_timeout: 5s
#   response_header_timeout: 5s
#   expect_continue_timeout: 1s
#   idle_conn_timeout: 90s

# Configuração de keep-alive
# http:
#   max_idle_conns: 100
#   max_idle_conns_per_host: 2
#   max_conns_per_host: 0
#   disable_keep_alives: false
#   disable_compression: false

# Configuração de buffer
# http:
#   write_buffer_size: 4096
#   read_buffer_size: 4096

# Configuração de redirecionamento
# http:
#   check_redirect: true
#   max_redirects: 10

# Configuração de proxy
# proxy:
#   http_proxy: "http://proxy.example.com:8080"
#   https_proxy: "http://proxy.example.com:8080"
#   no_proxy: "localhost,127.0.0.1,::1"
#   proxy_from_environment: true
#   proxy_connect_header:
#     Proxy-Authorization: "Basic dXNlcjpwYXNzd29yZA=="

# Configuração de tempo limite
# timeout: 30s

# Configuração de retry
# retry:
#   max_attempts: 3
#   initial_backoff: 100ms
#   max_backoff: 1s

# Configuração de backoff exponencial
# backoff:
#   initial_interval: 1s
#   max_interval: 30s
#   max_elapsed_time: 5m
#   multiplier: 1.5
#   randomization_factor: 0.5
